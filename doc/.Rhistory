if (!require("pacman")) install.packages("pacman")
pacman::p_load(text2vec, dplyr, qlcMatrix, kernlab, knitr)
setwd("~/Spr2017-proj4-team-11/doc")
source("../lib/dataclean.R")
# load("../data/data.RData")
source("../lib/coauthormatrix.R")
simmatrix.list <- NULL
simmatrix.list <- llply(data,coauthor_matrix)
df <- data[[1]]
simmatrix.list[[1]] <- coauthor_matrix(df)
start.time <- Sys.time()
simmatrix.list[[1]] <- coauthor_matrix(df)
start.time <- Sys.time()
simmatrix.list[[1]] <- coauthor_matrix(df) +
end.time <- Sys.time()
start.time <- Sys.time()
simmatrix.list[[1]] <- coauthor_matrix(df)
simmatrix.list[[1]]
source("../lib/singlelink.R")
?as.dist
cutree
start.time <- Sys.time()
source("../lib/coauthormatrix.R")
simmatrix.list <- NULL
simmatrix.list <- llply(data,coauthor_matrix)
end.time <- Sys.time()
time_coauthormatrix <- end.time-start.time
time_coauthormatrix
ss <- simmatrix.list[[1]]
Lm <- as.data.frame(ss*(-1))
Lm[is.na(Lm)] <- 0
N <- nrow(Lm)
merge <- matrix(0, N-1, 2)
height <- vector(length = N-1)
diag(Lm) <- Inf
colnames(Lm) <- (1:N)
rownames(Lm) <- (1:N)
h <- hclust(Lm)
577*577
source("../lib/singlelink.R")
source("../lib/singlelink.R")
start.time <- Sys.time()
cluster_temp.list <- NULL
cluster_temp.list <- llply(simmatrix.list,singlecluster)
end.time <- Sys.time()
time_scluter <- end.time - start.time
# table(result_sclust)
cluster_temp.list[[1]]
table(cluster_temp.list[[1]])
time_scluter
abc <- as.data.frame(table(cluster_temp.list[[1]]))
View(abc)
abc <- abc[order(abc$Freq,decreasing = T),]
View(abc)
abc <- as.data.frame(table(cluster_temp.list[[1]]))
abc[,1]
abc[,1] <- ifelse(abc$Freq==1,0,abc[,1])
View(abc)
aa <- as.data.frame(table(cluster_temp.list[[1]]))
View(aa)
aa[,1] <- ifelse(aa$Freq==1,0,aa[,1])
View(aa)
aa[,1] <- ifelse(aa$Freq==1,0,aa[,1])
aa <- aa[order(aa$Freq),]
aa[,1] <- ifelse(aa$Freq==1,0,aa[,1])
table(aa)
aa
(table(cluster_temp.list[[1]]))
aa <- (table(cluster_temp.list[[1]]))
aa
aa[1]
cluster_temp.list[[1]]
aa <- as.data.frame(table(cluster_temp.list[[1]]))
aa <- aa[order(aa$Freq,decreasing = T),]
cluster.combined <- NULL
cluster.combined <- llply(cluster_temp.list,comninecluster)
table(cluster.combined[[1]])
cluster.notcombined <- NULL
cluster.notcombined <- llply(cluster_temp.list,splitcluster)
table(cluster.notcombined[[1]])
?kable
kable(table(cluster.combined[[1]]),caption = "Compared")
kable(table(cluster.combined[[1]]),caption = "Compared",digits = 2)
table(cluster.combinedp[[1]])
table(cluster.combined[[1]])
source("../lib/evaluation_measures.R")
matching_matrix_single <- NULL
matching_matrix_single <- llply(data,matching_matrix,M=cluster.combined)
matching_matrix_single <- llply(data,matching_matrix,cluster.combined)
i = 1
data[[1]]
df= data[[1]]
matching_matrix_single <- llply(data,matching_matrix,cluster.combined)
matching_matrix_single <- llply(data,matching_matrix,M=cluster.combined)
source("../lib/evaluation_measures.R")
matching_matrix_single <- llply(data,matching_matrix,M=cluster.combined)
for (i in 1:14){
matching_matrix_single[[i]] <- matching_matrix(data[[i]],cluster.combined[[i]])
}
matching_matrix_single
matching_matrix_single <- NULL
matching_matrix_combined <- NULL
for (i in 1:14){
matching_matrix_single[[i]] <- matching_matrix(data[[i]],cluster.notcombined[[i]])
matching_matrix_combind[[i]] <- matching_matrix(data[[i]],cluster.combined[[i]])
}
for (i in 1:14){
matching_matrix_single[[i]] <- matching_matrix(data[[i]],cluster.notcombined[[i]])
matching_matrix_combind[[i]] <- matching_matrix(data[[i]],cluster.combined[[i]])
}
for (i in 1:14){
matching_matrix_single[[i]] <- matching_matrix(data[[i]],cluster.notcombined[[i]])
matching_matrix_combined[[i]] <- matching_matrix(data[[i]],cluster.combined[[i]])
}
performance_statistics(matching_matrix_sinlge)
performance_statistics(matching_matrix_single)
performance_statistics(matching_matrix_single[[1]])
AP <- performance_statistics(matching_matrix_single[[1]])
AP$f1
f1.list <- NULL
accuracy.list <- NULL
for (i in 1:14){
f1.list[i] <- performance_statistics(matching_matrix_single[i])
accuracy.list[i] <- performance_statistics(matching_matrix_single[i])
}
f1.list <- NULL
accuracy.list <- NULL
for (i in 1:14){
f1.list[i] <- performance_statistics(matching_matrix_single[[i]])
accuracy.list[i] <- performance_statistics(matching_matrix_single[[i]])
}
warnings()
f1.list <- NULL
accuracy.list <- NULL
for (i in 1:14){
f1.list[i] <- performance_statistics(matching_matrix_single[[i]])$f1
accuracy.list[i] <- performance_statistics(matching_matrix_single[[i]])$accuracy
}
plot(f1.list)
performance_statistics(matching_matrix_single[[12]])
f1.list.single <- NULL
accuracy.list.single <- NULL
f1.list.combined <- NULL
accuracy.list.combined <- NULL
for (i in 1:14){
f1.list.single[i] <- performance_statistics(matching_matrix_single[[i]])$f1
f1.list.combined[i] <- performance_statistics(matching_matrix_combined[[i]])$f1
accuracy.list.single[i] <- performance_statistics(matching_matrix_single[[i]])$accuracy
accuracy.list.combined[i] <- performance_statistics(matching_matrix_combined[[i]])$accuracy
}
plot(f1.list.combined)
summary(f1.list.combined)
summary(f1.list.single)
summary(accuracy.list.combined)
summary(accuracy.list.single)
plot(accuracy.list.combined)
plot(accuracy.list.single)
plot(f1.list.single)
data[[13]]
dff <- data[[13]]
View(dff)
cluster_temp.list[[13]]
cluster.combined[[13]]
a <- cluster.combined[[13]]
dff <- cbind (a,dff)
f1.list.single
f1.list.combined
plot(f1.list.combined,color="red")
plot(f1.list.combined,col="red")
warnings()
plot(f1.list.combined,type="l",col="red")
lines(f1.list.single,col="green")
?plot
plot(f1.list.combined,type="b",col="red")
lines(f1.list.single,col="green")
plot(accuracy.list.combined)
matching_matrix_single <- NULL
matching_matrix_combined <- NULL
for (i in 1:14){
matching_matrix_single[[i]] <- matching_matrix(data[[i]],cluster.notcombined[[i]])
matching_matrix_combined[[i]] <- matching_matrix(data[[i]],cluster.combined[[i]])
}
